{
  "name": "manual-testing@master",
  "description": "Example description",
  "type": "policy-set",
  "git": true,
  "build": [
    {
      "name": "masterfiles",
      "description": "Official CFEngine Masterfiles Policy Framework (MPF).",
      "tags": ["supported", "base"],
      "repo": "https://github.com/cfengine/masterfiles",
      "by": "https://github.com/cfengine",
      "version": "3.24.0",
      "commit": "d5d5c61942a97ec5e3fd35478e590c5943db5ac5",
      "added_by": "cfbs add",
      "steps": [
        "run EXPLICIT_VERSION=3.24.0 EXPLICIT_RELEASE=1 ./prepare.sh -y",
        "copy ./ ./"
      ]
    },
    {
      "name": "library-parsed-local-users",
      "description": "Parses local users from /etc/passwd on the system with their attributes from /etc/shadow.",
      "tags": ["supported", "library"],
      "repo": "https://github.com/nickanderson/cfengine-local_users",
      "by": "https://github.com/nickanderson",
      "version": "2.0.5",
      "commit": "ede282c34083ab807543aa734b1142228ab98993",
      "subdirectory": "parsed_etc_passwd_shadow",
      "added_by": "inventory-local-users",
      "steps": [
        "copy ./parsed_etc_passwd_shadow.cf services/local-users/parsed_etc_passwd_shadow/",
        "json cfbs/def.json def.json"
      ]
    },
    {
      "name": "inventory-local-users",
      "description": "Adds reporting data (inventory) for the local users on the system with their attributes.",
      "tags": ["supported", "inventory"],
      "repo": "https://github.com/nickanderson/cfengine-local_users",
      "by": "https://github.com/nickanderson",
      "version": "2.0.4",
      "commit": "3b50be1e5ab09578109921b8f287603b37811350",
      "subdirectory": "inventory_passwd_users_all",
      "dependencies": ["library-parsed-local-users"],
      "added_by": "cfbs add",
      "steps": [
        "copy ./inventory_passwd_users_all.cf services/local-users/inventory_passwd_users_all/",
        "json cfbs/def.json def.json"
      ]
    },
    {
      "name": "compliance-report-imports",
      "description": "Used by other modules to import compliance reports to Mission Portal.",
      "tags": ["experimental", "cfengine-enterprise"],
      "repo": "https://github.com/nickanderson/cfengine-security-hardening",
      "by": "https://github.com/nickanderson",
      "version": "0.0.11",
      "commit": "9bd8f0d837905b4ae4104d78af26f274d1a45b5e",
      "subdirectory": "compliance-report-imports",
      "added_by": "compliance-report-lynis",
      "steps": [
        "copy ./compliance-report-imports.cf services/cfbs/modules/compliance-report-imports/compliance-report-imports.cf",
        "policy_files services/cfbs/modules/compliance-report-imports/compliance-report-imports.cf",
        "bundles default:compliance_report_imports"
      ]
    },
    {
      "name": "lynis",
      "description": "Automates the installation, running, and reporting of CISOfy's lynis system audits.",
      "tags": ["security", "compliance"],
      "repo": "https://github.com/nickanderson/cfengine-lynis",
      "by": "https://github.com/nickanderson",
      "version": "3.1.1-2",
      "commit": "4db6d515c45873a9f3fa7ce78ece593027464b64",
      "added_by": "compliance-report-lynis",
      "steps": [
        "copy policy/main.cf services/lynis/main.cf",
        "json cfbs/def.json def.json",
        "input ./input.json def.json"
      ],
      "input": [
        {
          "type": "string",
          "namespace": "lynis",
          "bundle": "globals",
          "variable": "version",
          "label": "Lynis version",
          "question": "What version of Lynis should be used?",
          "default": "3.1.1"
        },
        {
          "type": "string",
          "namespace": "lynis",
          "bundle": "globals",
          "variable": "tar_url",
          "label": "Tarball url",
          "question": "Where should clients download lynis from (http/https)",
          "default": "https://downloads.cisofy.com/lynis/lynis-$(version).tar.gz",
          "comment": "Some may want to self host the tarball within their own infrastructure. This provides an easy way to do that. Note, the archive should be named for the version of Lynis selected."
        },
        {
          "type": "string",
          "namespace": "lynis",
          "bundle": "globals",
          "variable": "archive_hash",
          "label": "Hash of the tarball",
          "question": "What is the hash of the tarball?",
          "default": "d72f4ee7325816bb8dbfcf31eb104207b9fe58a2493c2a875373746a71284cc3"
        },
        {
          "type": "string",
          "namespace": "lynis",
          "bundle": "globals",
          "variable": "hash_type",
          "label": "Hash type to verify",
          "question": "What hashing algorithm should be used to verify the Lynis script?",
          "default": "sha256"
        }
      ]
    },
    {
      "name": "compliance-report-lynis",
      "description": "Compliance report with Lynis checks.",
      "tags": ["experimental", "security", "compliance"],
      "repo": "https://github.com/nickanderson/cfengine-lynis",
      "by": "https://github.com/nickanderson",
      "version": "3.1.1-2",
      "commit": "247ca61c13ebedcba800a10f1af4e56ab0a874a0",
      "subdirectory": "compliance-reports",
      "dependencies": ["compliance-report-imports", "lynis"],
      "added_by": "cfbs add",
      "steps": [
        "copy ./generated-compliance-report.json .no-distrib/compliance-report-definitions/lynis-compliance-report.json"
      ]
    }
  ]
}
